需求背景
----

第3方apk通过自己的服务器下发参数给sdk，使sdk可以根据下发的参数，做一些事情。一般都是功能开关。默认不下发，需要的时候由UC提供一个参数值，第3方apk只需要将服务器下发的这个参数值通过sdk接口设置给sdk即可。

需求实现说明
----

1.增加设置参数的接口：UCCore.setParam(String value);

2.一般在调用UCCore.init进行初始化之前，调用以上接口来设置服务器下发的参数（有下发才调用，没有则不调用），然后如果运行过程中服务器更新下发新的参数时，再调用该接口进行实时设置。初始化之前调用，主要是使初始化过程可以根据该参数进行不同处理。sdk内部不对这个参数值进行持久化，由第3方apk去做持久化。

3.参数值的格式（第3方apk不需要关心该参数的值）

key,value对，多个key,value对之前以;号分割；

key1=value1;key2=value2

功能开关说明
----
|功能|key|value|说明|
| ----- |-----| -----|-----|
|强制系统WebView开关|swv|是：true 否：false|未下发则默认为false，初始化完成之后，再下发，则当允许多核的情况下，且为true，才会生效（如果是扫描浏览器的方式，还需要版本大于1.9.13）；|
|是否使用apollo开关|apollo|是：true 否：false|未下发则默认为true，这个开关不会影响到apollo库的下载，目的是在以前关闭时，重新打开能用得上apollo；同时，开关打开时，也必须有下载好的可用的apollo库，才能真正用上apollo；|
|统计开关|stat|开：true 关：false|未下发则默认为true;false：不统计，不上传数据；

 

>多个开关之间以;分割，例如：

>stat=false;swv=true;apollo=false